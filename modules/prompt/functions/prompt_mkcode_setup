#
# A theme based on Steve Losh's Extravagant Prompt with vcs_info integration.
#
# Authors:
#   Steve Losh <steve@stevelosh.com>
#   Bart Trojanowski <bart@jukie.net>
#   Brian Carper <brian@carper.ca>
#   steeef <steeef@gmail.com>
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Screenshots:
#   http://i.imgur.com/HyRvv.png
#

function prompt_mkcode_precmd {
  # Check for untracked files or updated submodules since vcs_info does not.
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    branch_format="(${_prompt_mkcode_colors[1]}%b%f üçû %c)"
  else
    branch_format="(${_prompt_mkcode_colors[1]}%b%f%u%c)"
  fi

  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"

  vcs_info 'prompt'

  # Get Python information.
  # if (( $+functions[python-info] )); then
  #   python-info
  # fi

  # Get Ruby information.
  if (( $+functions[ruby-info] )); then
      ruby-info
  fi
}

function prompt_mkcode_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_mkcode_precmd

  # Use extended color pallete if available.
  if [[ $TERM = *256color* || $TERM = *rxvt* ]]; then
    _prompt_mkcode_colors=(
      "%F{81}"  # Turquoise
      "%F{166}" # Orange
      "%F{135}" # Purple
      "%F{161}" # Hotpink
      "%F{118}" # Limegreen
    )
  else
    _prompt_mkcode_colors=(
      "%F{cyan}"
      "%F{yellow}"
      "%F{magenta}"
      "%F{red}"
      "%F{green}"
    )
  fi

  # Formats:
  #   %b - branchname
  #   %u - unstagedstr (see below)
  #   %c - stagedstr (see below)
  #   %a - action (e.g. rebase-i)
  #   %R - repository path
  #   %S - path in the repository
  local branch_format="(${_prompt_mkcode_colors[1]}%b%f%u%c)"
  local action_format="(${_prompt_mkcode_colors[5]}%a%f)"
  local unstaged_format=" üçû"
  local staged_format=" üöÄ "

  # Set vcs_info parameters.
  zstyle ':vcs_info:*' enable bzr git hg svn
  zstyle ':vcs_info:*:prompt:*' check-for-changes true
  zstyle ':vcs_info:*:prompt:*' unstagedstr "${unstaged_format}"
  zstyle ':vcs_info:*:prompt:*' stagedstr "${staged_format}"
  zstyle ':vcs_info:*:prompt:*' actionformats "${branch_format}${action_format}"
  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"
  zstyle ':vcs_info:*:prompt:*' nvcsformats " ‚úó "

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '${_prompt_mkcode_colors[5]}...%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '${_prompt_mkcode_colors[2]}--- COMMAND ---%f'

  # Set python-info parameters.
  # zstyle ':prezto:module:python:info:virtualenv' format '(%v)'
  # Set ruby-info parameters.
  zstyle ':prezto:module:ruby:info:version' format '%F{blue}[%v]%f'

  # Define prompts.
  VIM_PROMPT="${_prompt_mkcode_colors[3]}[% NORMAL]% %f "
  PROMPT="
${_prompt_mkcode_colors[3]}%n%f at ${_prompt_mkcode_colors[2]}%m%f in ${_prompt_mkcode_colors[5]}%~%f "'${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}'""'${vcs_info_msg_0_}'"
"''"$ "
  RPROMPT='${ruby_info[version]}'
  SPROMPT='zsh: correct ${_prompt_mkcode_colors[3]}%R%f to ${_prompt_mkcode_colors[5]}%r%f [nyae]? '
}

function zle-line-init zle-keymap-select {
  zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select

export KEYTIMEOUT=2

prompt_mkcode_setup "$@"
